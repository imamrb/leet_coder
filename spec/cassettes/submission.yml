---
http_interactions:
- request:
    method: get
    uri: https://leetcode.com/submissions/detail/754052092/
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      User-Agent:
      - Faraday v1.10.0
      Cookie:
      - "<Cookie>"
      Referer:
      - https://leetcode.com
      X-Csrftoken:
      - "<X-Csrftoken>"
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 Jul 2022 21:00:26 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Cookie
      X-Frame-Options:
      - DENY
      Set-Cookie:
      - "<Set-Cookie>"
      - csrftoken=4aB11vYKo8xT6aa9fWmQy1G67lLnzA2iSoFmostuBgEXHtuBmWJwE3hxkolwtcZo;
        expires=Fri, 28 Jul 2023 21:00:25 GMT; Max-Age=31449600; Path=/; SameSite=Lax;
        Secure
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy:
      - frame-ancestors 'self' https://*.leetcode.com https://leetcode.com https://www.growingio.com
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=HYgsWmfCGAcCwfSuKXvnYYoyWvqBGV2qRHr0tKNK%2BwlWDpjQkX4IDUox7uajVSy4uU3BqmZZ7PNv%2FsxQzbv64elPu6FfxSLSQAgm4Jjvtj6gyDYt99cKZxplunfkpw%3D%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 7328c8b418718565-BOM
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 29 Jul 2022 21:00:26 GMT
recorded_with: VCR 6.1.0
